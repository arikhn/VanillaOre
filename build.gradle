buildscript {
    repositories {
        jcenter()
        maven { url = "https://maven.minecraftforge.net" }
    }
    dependencies {
        classpath("com.anatawa12.forge:ForgeGradle:2.3-1.0.+") {
            changing = true
        }
	classpath "nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: "com.github.hierynomus.license"

group = project.mod_group
archivesBaseName = "vanillaore"
version = "${project.mc_version}-${project.mod_version}"
if (System.getenv('BUILD_NUMBER') != null) {
    version = "${mc_version}-${mod_version}-"+ System.getenv('BUILD_NUMBER')
}

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${project.mc_version}-${project.forge_version}"
    runDir = "run"
    mappings = "${project.mappings}"
    
    replace '@VERSION@', project.version
    replace '@FINGERPRINT@', project.findProperty('signSHA1')
    replaceIn "${replace_class}"
}

dependencies {}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.mc_version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.mc_version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task signJar(type: SignJar, dependsOn: ['reobfJar', 'sourceJar']) {

    // Skips if the keyStore property is missing.
    onlyIf {
        project.hasProperty('keyStore')
    }
    
    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

artifacts {
    archives sourceJar
}

tasks.build.dependsOn signJar
tasks.install.dependsOn signJar

license {
    ext {
        year = '2023'
        fullname = 'ArikHn aka RiK'
    }
    header rootProject.file('HEADER')
    include '**io/github/arikhn/**/*.java'
    ignoreFailures false
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

uploadArchives {
    repositories.mavenDeployer {

        dependsOn 'signJar'

        if (project.hasProperty('mavenUser'))
        {
            name = "GitHubPackages"
            repository(url: "https://maven.pkg.github.com/ArikHn/VanillaOre") {
                authentication(userName: project.findProperty('mavenUser'), password: project.findProperty('mavenPass'))
            }
        }
        else
        {
            repository(url: project.hasProperty('mavenUser') ? project.findProperty('localMaven') : 'file://localhost/' + project.file('repo').getAbsolutePath())
        }


        pom {
            groupId = project.group
            version = project.version
            artifactId = project.archivesBaseName
            project {
                name project.mod_name
                packaging 'jar'
                description 'Allow to configuring spawn chance for vanilla ore'
                url 'https://github.com/ArikHn/VanillaOre'

                scm {
                    url 'https://github.com/ArikHn/VanillaOre'
                    connection 'scm:git:git://github.com/ArikHn/VanillaOre.git'
                    developerConnection 'scm:git:git@github.com:ArikHn/VanillaOre.git'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://www.tldrlegal.com/license/mit-license'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'ArikHn'
                        name 'ArikHn'
                        roles { role 'developer' }
                    }
                }
            }
        }
    }
}